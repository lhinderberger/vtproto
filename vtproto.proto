/*
 * This file, in its original form, was created by Lucas Hinderberger
 *
 * To the extend possible under law, Lucas Hinderberger has waived all copyright
 * and related or neighboring rights to this file, as described in
 * CC0 1.0 Universal (https://creativecommons.org/publicdomain/zero/1.0/).
 * This work is published from Germany.
 */

syntax = "proto3";

enum WaveformType {
    SINE = 0;
    SQUARE = 1;
    TRIANGLE = 2;
    SAWTOOTH = 3;
}

message FileHeader {
    uint32 format_version = 1; // Fixed value for this draft of vtproto: 0
    string pattern_name = 2;
    string author = 3;
    uint32 duration_ms = 4;
    uint32 n_instructions = 5;
    uint32 n_channels = 6;
    map<string,string> custom_headers = 7;
}

message Instruction {
    oneof concrete_instruction {
        InstAddToGroup add_channels_to_group = 1;
        InstAddToGroup add_groups_to_group = 2;
        InstWait wait = 3;
        InstSetWaveformType set_channel_waveform_type = 4;
        InstSetWaveformType set_group_waveform_type = 5;
        InstInstantlySetIntensity set_channel_intensity = 6;
        InstInstantlySetFrequency set_channel_frequency = 7;
        InstInstantlySetIntensity set_group_intensity = 8;
        InstInstantlySetFrequency set_group_frequency = 9;
        InstInterpolateIntensity interpolate_channel_intensity = 10;
        InstInterpolateFrequency interpolate_channel_frequency = 11;
        InstInterpolateIntensity interpolate_group_intensity = 12;
        InstInterpolateFrequency interpolate_group_frequency = 13;
    }
}

message InstAddToGroup {
    uint32 group_id = 1;
    repeated uint32 ids_to_be_added = 2;
}

message InstInstantlySetFrequency {
    uint32 target_id = 1; // Either a Group ID or Channel ID, depending on the instruction type
    uint32 frequency_hz = 2;
}

message InstInstantlySetIntensity {
    uint32 target_id = 1; // Either a Group ID or Channel ID, depending on the instruction type
    float intensity = 2; // Range 0 - 1.0
}

message InstInterpolateFrequency {
    uint32 target_id = 1; // Either a Group ID or Channel ID, depending on the instruction type
    uint32 duration_ms = 2;
    uint32 frequency_hz = 3;
}

message InstInterpolateIntensity {
    uint32 target_id = 1; // Either a Group ID or Channel ID, depending on the instruction type
    uint32 duration_ms = 2;
    float intensity = 3; // Range 0-1
}

message InstSetWaveformType {
    uint32 target_id = 1; // Either a Group ID or Channel ID, depending on the instruction type
    WaveformType waveform_type = 1;
}

message InstWait {
    uint32 milliseconds = 1;
}
